@charset "utf-8";
@import url('https://fonts.googleapis.com/css2?family=Work+Sans&display=swap');
@import "reset.scss";

body{
    overflow: hidden;
    // 여자의 사진이 아래쪽이나 오른쪽으로 사라질때 스크롤이 생기기 때문에

    header{
        width: 100%;
        position: absolute;
        top: 0;
        left: 0;
        padding: 5vh 5vw;
        z-index: 2;
        display: flex;
        justify-content: space-between;
        align-items: center;

        .sns{
            display: flex;

            a{
                display: block;
                width: 32px;
                height: 32px;
                background-color: #444;
                border-radius: 50%;
                margin-left: 20px;
                font-size: 12px;
                display: flex;
                justify-content: center;
                align-items: center;
                color: #fff;
            }
        }
    }

    main{
        width: 100%;
        height: 100vh;
        background: url(../img/bgBody.jpg) no-repeat center;
        background-size: cover;
        &.on{
            .txt{
                transform: translateY(-200%);
                opacity: 0;
            }

            .woman{
                left: 100%;
                opacity: 0;
            }

            .btnOpen{
                bottom: 0vh;
                opacity: 0;
            }
        }

        .txt{
            width: 40vw;
            position: absolute;
            top: 50%;
            left: 15vw;
            transform: translateY(-70%);
            // txt 밑에 버튼을 만들 예정이라 버튼까지 포함해서 가운데에 위치하는것처럼 보이게 하기 위해 높이값을 살짝 더 올려준다.
            transition: 1s 0s;
        }

        .woman{
            height: 100vh;
            position: absolute;
            top: 0;
            left: 50%;
            transition: 1s 0.2s;
        }

        .btnOpen{
            display: block;
            width: 20vw;
            min-width: 300px;
            // 반응형인 경우 창이 줄어들다가 버튼 안의 글자가 바깥으로 빠져 나가는 경우가 있는데 최소한의 너비 만큼은 유지가 되어야 글자가 밖으로 삐져나가지 않을 수 있다.
            // 즉, width값을 부여하면서 min-width 값을 또 부여하는것은 이러한 현상을 방지하기 위한것이다.
            height: 40px;
            background-color: rgba(0, 0, 0, 0.6);
            position: absolute;
            bottom: 30vh;
            left: 15vw;
            font: bold 14px/1 "arial";
            color: #fff;
            display: flex;
            justify-content: center;
            align-items: center;
            transition: 1s 0.4s;
        }
    }
    footer{
        width: 100%;
        position: absolute;
        bottom: 0;
        left: 0;
        background: rgba(0, 0, 0, 0.6);
        padding: 10px 5vw;
        display: flex;
        justify-content: space-between;
        align-items: center;

        ul{
            display: flex;

            li{
                margin-right: 50px;
                font: bold 12px/1 "arial";
                color: #aaa;
            }
        }
        p{
            font: bold 12px/1 "arial";
            color: #aaa;
            letter-spacing: 3px;
        }
    }

    aside{
        width: 60vw;
        height: 60vh;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        display: none;

        .top{
            width: 0%;
            height: 1px;
            background-color: #111;
            position: absolute;
            top: 0;
            left: 0;
        }

        .right{
            width: 1px;
            height: 0%;
            background-color: #111;
            position: absolute;
            top: 0;
            right: 0;
        }

        .bottom{
            width: 0%;
            height: 1px;
            background-color: #111;
            position: absolute;
            bottom: 0;
            right: 0;
        }

        .left{
            width: 1px;
            height: 0%;
            background-color: #111;
            position: absolute;
            bottom: 0;
            left: 0;
        }

        .inner{
            width: 100%;
            height: 100%;
            background-color: #000;
            position: absolute;
            top: 0; left: 0;
            opacity: 0;
            padding: 50px;
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
            align-items: center;

            .pic{
                width: 30%;
            }
            // pic에 width 값 30%, content에 65%를 줘서 5%를 자동 padding
            .content{
                width: 65%;

                h2{
                    font: 5vw/1 "Work Sans";
                    color: #fff;
                    margin-bottom: 20px;
                }

                p{
                    font: 16px/1.3 "arial";
                    color: #666;
                }

                .btnClose{
                    position: absolute;
                    top: 40px;
                    right: 40px;
                }
            }
        }
    }
}